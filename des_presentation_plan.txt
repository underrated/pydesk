DES PRESENTATION PLAN

* Intro
** What is simulation
** Why do we need simulation
** Discrete event simulation
** Requirements
*** Reproducibility
*** No interraction with the real world
*** All in all : the simulation has to be deterministic
** Concerns

* Simulating parallelism
** Real-world parallelism
*** Context switch
*** preemptive
*** non-preemptive
** Race conditions, deadlocks, livelocks
** Coroutines
** Coroutines in python
*** Short intro to python
*** data types
*** control statements
*** oop
*** generators
** Simulating parallelism with coroutines
*** Iterating over the threads
*** Simulating race conditions with a random number generator
*** Using preemption to gain performance

* Simulating time
** Wallclock time
** Simulation time
** Managing simulation time over multiple threads
** Simulating simulatenity
** Simulation phases
*** Evaluate
*** Update
*** Delta cycles
*** Running simulation indefinitely
*** Running simulation for a period of time
** Temporal decoupling
 
* Simulating discrete events
** What is an event
** Waiting for events
** Emitting events
** Consuming events
** Event callbacks
** Temporal expressions
** Temporal assertion
** Event Deadlocks
** Event Livelocks

* Simulating communication
** Method ports
*** Initiators and targets
*** Blocking and nonblocking
*** Livelocks and deadlocks
*** Broadcast ports
** Reactive ports
*** blocking vs non-blocking assignments
** Buffer ports

* Simulating randomness
** Pseudo-random number generators
** Constrained random generation
*** SAT
*** SMT
*** IntelliGen
*** Example
*** Performance issues
** Possible uses
*** Simulating race conditions
**** Shuffling threads
**** Shuffling event callbacks

* Implementing and verifying a discrete event simulator
** Threads
** Simulation time
** Events
** Components
** Method ports
** Reactive ports
** The simulator
** Verification 
*** Verification plan
** Performance issues
*** Complexity analysis
*** Use of preemption in thread scheduling
*** Use of preemption in event callbacks
*** Benchmark tests
** Buffer ports

* Exercises

* Questions and comments

